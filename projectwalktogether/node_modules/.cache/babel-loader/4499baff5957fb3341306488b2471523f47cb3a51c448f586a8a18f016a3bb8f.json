{"ast":null,"code":"var _jsxFileName = \"/Users/minsungsmac/Library/CloudStorage/OneDrive-Personal/ForCode/ProjectWalkTogether/projectwalktogether/src/components/PostModal/PostModal.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport styled from 'styled-components';\n\n// declare global {\n//     interface Window {\n//         kakao: any;\n//     }\n// }\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LoginModal(_ref) {\n  _s();\n  let {\n    open,\n    onClose,\n    setLoginModalopen\n  } = _ref;\n  const [findPwd, setFindPwd] = useState('');\n  const email = findPwd;\n  const ref = useRef(null);\n\n  // useEffect(() => {\n  //     const options = {\n  //         center: new window.kakao.maps.LatLng(33.450701, 126.570667),\n  //         level: 3,\n  //     };\n  //     new window.kakao.maps.Map(ref.current, options);\n  // }, []);\n\n  // 인풋값을 저장\n  const findPasswordfnc = e => {\n    setFindPwd(e.target.value);\n    console.log(findPwd);\n  };\n  const handleSubmitClick = () => {\n    var i = 0;\n  };\n\n  // 모달을 끄고있게 해준다.\n  if (!open) return null;\n  return /*#__PURE__*/_jsxDEV(Overlay, {\n    children: /*#__PURE__*/_jsxDEV(ModalContainer, {\n      className: \"modalContainer\",\n      children: [/*#__PURE__*/_jsxDEV(CloseBtn, {\n        onClick: onClose,\n        className: \"closeBtn\",\n        children: \"x\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Map, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(BtnContainer, {\n        className: \"btnContainer\",\n        children: /*#__PURE__*/_jsxDEV(Btnprimary, {\n          onClick: handleSubmitClick,\n          type: \"submit\",\n          className: \"btnprimary\",\n          children: /*#__PURE__*/_jsxDEV(Span, {\n            className: \"bold\",\n            children: \"\\uC81C \\uCD9C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n}\n_s(LoginModal, \"xeoM7x50sW3R5oy+H0GNcFdYpEo=\");\n_c = LoginModal;\nexport default LoginModal;\nconst StyledContainer = styled.div`\n    width: 100%;\n    height: 100%;\n`;\n\n// 배경의 색(회색)\nconst Overlay = styled.div`\n    background-color: rgba(0, 0, 0, 0.5);\n    position: fixed;\n    transform: translate(0%, -100%);\n    width: 100%;\n    height: 100%;\n    z-index: 2;\n`;\n\n//모달 박스 (흰색)\n_c2 = Overlay;\nconst ModalContainer = styled.div`\n    /* max-width: 60%; */\n    width: 60%;\n    height: 80%;\n    position: relative;\n    top: 10%;\n    left: 20%;\n\n    background-color: white;\n    box-shadow: 5px 5px 5px 0px rgba(0, 0, 0, 0.75);\n    border-radius: 20px;\n    @media screen and (max-width: 768px) {\n        font-size: 5px;\n        width: 70%;\n        height: 80%;\n        position: relative;\n        left: 20%;\n    }\n`;\n\n// X버튼\n_c3 = ModalContainer;\nconst CloseBtn = styled.p`\n    position: absolute;\n    top: -50px;\n    right: 50px;\n    cursor: pointer;\n    background-color: white;\n    @media screen and (max-width: 972px) {\n        right: 7%;\n    }\n`;\n_c4 = CloseBtn;\nconst BtnContainer = styled.div`\n    position: relative;\n    top: 75%;\n    left: 40%;\n    width: 7rem;\n    height: 5rem;\n    padding: 1rem 1rem;\n    @media screen and (max-width: 1244px) {\n        left: 37%;\n    }\n    @media screen and (max-width: 1030px) {\n        left: 37%;\n    }\n    @media screen and (max-width: 972px) {\n        left: 32%;\n    }\n    @media screen and (max-width: 768px) {\n        left: 32%;\n    }\n    @media screen and (max-width: 581px) {\n        left: 27%;\n    }\n    @media screen and (max-width: 497px) {\n        left: 23%;\n    }\n    @media screen and (max-width: 435px) {\n        left: 20%;\n        top: 70%;\n    }\n    @media screen and (max-width: 375px) {\n        left: 12%;\n    }\n    @media screen and (max-width: 315px) {\n        left: 8%;\n    }\n`;\n_c5 = BtnContainer;\nconst Btnprimary = styled.button`\n    width: 6.25rem;\n    height: 2rem;\n    /* position: relative; */\n    left: 15rem;\n    margin: 0.5rem;\n    padding: 1rem 0;\n    border: none;\n    color: #2192ff;\n    background-color: aliceblue;\n    border-radius: 2.1875rem;\n    cursor: pointer;\n`;\n\n//버튼 글자\n_c6 = Btnprimary;\nconst Span = styled.span`\n    position: relative;\n    bottom: 0.5rem;\n`;\n_c7 = Span;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n$RefreshReg$(_c, \"LoginModal\");\n$RefreshReg$(_c2, \"Overlay\");\n$RefreshReg$(_c3, \"ModalContainer\");\n$RefreshReg$(_c4, \"CloseBtn\");\n$RefreshReg$(_c5, \"BtnContainer\");\n$RefreshReg$(_c6, \"Btnprimary\");\n$RefreshReg$(_c7, \"Span\");","map":{"version":3,"names":["React","useState","useRef","styled","LoginModal","open","onClose","setLoginModalopen","findPwd","setFindPwd","email","ref","findPasswordfnc","e","target","value","console","log","handleSubmitClick","i","StyledContainer","div","Overlay","ModalContainer","CloseBtn","p","BtnContainer","Btnprimary","button","Span","span"],"sources":["/Users/minsungsmac/Library/CloudStorage/OneDrive-Personal/ForCode/ProjectWalkTogether/projectwalktogether/src/components/PostModal/PostModal.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react'\nimport styled from 'styled-components'\n\n// declare global {\n//     interface Window {\n//         kakao: any;\n//     }\n// }\n\nfunction LoginModal({ open, onClose, setLoginModalopen }: any | JSX.Element) {\n    const [findPwd, setFindPwd] = useState('')\n    const email = findPwd\n    const ref = useRef<HTMLDivElement>(null)\n\n    // useEffect(() => {\n    //     const options = {\n    //         center: new window.kakao.maps.LatLng(33.450701, 126.570667),\n    //         level: 3,\n    //     };\n    //     new window.kakao.maps.Map(ref.current, options);\n    // }, []);\n\n    // 인풋값을 저장\n    const findPasswordfnc = (e: React.ChangeEvent<HTMLInputElement>) => {\n        setFindPwd(e.target.value)\n        console.log(findPwd)\n    }\n\n    const handleSubmitClick = () => {\n        var i = 0\n    }\n\n    // 모달을 끄고있게 해준다.\n    if (!open) return null\n\n    return (\n        <Overlay>\n            <ModalContainer className=\"modalContainer\">\n                {/* <div className=\"modalRight\"> */}\n                <CloseBtn onClick={onClose} className=\"closeBtn\">\n                    x\n                </CloseBtn>\n                <Map />\n                {/* <StyledContainer id=\"map\" ref={ref} /> */}\n\n                <BtnContainer className=\"btnContainer\">\n                    <Btnprimary\n                        onClick={handleSubmitClick}\n                        type=\"submit\"\n                        className=\"btnprimary\"\n                    >\n                        <Span className=\"bold\">제 출</Span>\n                    </Btnprimary>\n                </BtnContainer>\n                {/* </div> */}\n            </ModalContainer>\n        </Overlay>\n    )\n}\n\nexport default LoginModal\n\nconst StyledContainer = styled.div`\n    width: 100%;\n    height: 100%;\n`\n\n// 배경의 색(회색)\nconst Overlay = styled.div`\n    background-color: rgba(0, 0, 0, 0.5);\n    position: fixed;\n    transform: translate(0%, -100%);\n    width: 100%;\n    height: 100%;\n    z-index: 2;\n`\n\n//모달 박스 (흰색)\nconst ModalContainer = styled.div`\n    /* max-width: 60%; */\n    width: 60%;\n    height: 80%;\n    position: relative;\n    top: 10%;\n    left: 20%;\n\n    background-color: white;\n    box-shadow: 5px 5px 5px 0px rgba(0, 0, 0, 0.75);\n    border-radius: 20px;\n    @media screen and (max-width: 768px) {\n        font-size: 5px;\n        width: 70%;\n        height: 80%;\n        position: relative;\n        left: 20%;\n    }\n`\n\n// X버튼\nconst CloseBtn = styled.p`\n    position: absolute;\n    top: -50px;\n    right: 50px;\n    cursor: pointer;\n    background-color: white;\n    @media screen and (max-width: 972px) {\n        right: 7%;\n    }\n`\n\nconst BtnContainer = styled.div`\n    position: relative;\n    top: 75%;\n    left: 40%;\n    width: 7rem;\n    height: 5rem;\n    padding: 1rem 1rem;\n    @media screen and (max-width: 1244px) {\n        left: 37%;\n    }\n    @media screen and (max-width: 1030px) {\n        left: 37%;\n    }\n    @media screen and (max-width: 972px) {\n        left: 32%;\n    }\n    @media screen and (max-width: 768px) {\n        left: 32%;\n    }\n    @media screen and (max-width: 581px) {\n        left: 27%;\n    }\n    @media screen and (max-width: 497px) {\n        left: 23%;\n    }\n    @media screen and (max-width: 435px) {\n        left: 20%;\n        top: 70%;\n    }\n    @media screen and (max-width: 375px) {\n        left: 12%;\n    }\n    @media screen and (max-width: 315px) {\n        left: 8%;\n    }\n`\n\nconst Btnprimary = styled.button`\n    width: 6.25rem;\n    height: 2rem;\n    /* position: relative; */\n    left: 15rem;\n    margin: 0.5rem;\n    padding: 1rem 0;\n    border: none;\n    color: #2192ff;\n    background-color: aliceblue;\n    border-radius: 2.1875rem;\n    cursor: pointer;\n`\n\n//버튼 글자\nconst Span = styled.span`\n    position: relative;\n    bottom: 0.5rem;\n`\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAaC,MAAM,QAAQ,OAAO;AAC1D,OAAOC,MAAM,MAAM,mBAAmB;;AAEtC;AACA;AACA;AACA;AACA;AAAA;AAEA,SAASC,UAAU,OAA0D;EAAA;EAAA,IAAzD;IAAEC,IAAI;IAAEC,OAAO;IAAEC;EAAqC,CAAC;EACvE,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAMS,KAAK,GAAGF,OAAO;EACrB,MAAMG,GAAG,GAAGT,MAAM,CAAiB,IAAI,CAAC;;EAExC;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA,MAAMU,eAAe,GAAIC,CAAsC,IAAK;IAChEJ,UAAU,CAACI,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;IAC1BC,OAAO,CAACC,GAAG,CAACT,OAAO,CAAC;EACxB,CAAC;EAED,MAAMU,iBAAiB,GAAG,MAAM;IAC5B,IAAIC,CAAC,GAAG,CAAC;EACb,CAAC;;EAED;EACA,IAAI,CAACd,IAAI,EAAE,OAAO,IAAI;EAEtB,oBACI,QAAC,OAAO;IAAA,uBACJ,QAAC,cAAc;MAAC,SAAS,EAAC,gBAAgB;MAAA,wBAEtC,QAAC,QAAQ;QAAC,OAAO,EAAEC,OAAQ;QAAC,SAAS,EAAC,UAAU;QAAA,UAAC;MAEjD;QAAA;QAAA;QAAA;MAAA,QAAW,eACX,QAAC,GAAG;QAAA;QAAA;QAAA;MAAA,QAAG,eAGP,QAAC,YAAY;QAAC,SAAS,EAAC,cAAc;QAAA,uBAClC,QAAC,UAAU;UACP,OAAO,EAAEY,iBAAkB;UAC3B,IAAI,EAAC,QAAQ;UACb,SAAS,EAAC,YAAY;UAAA,uBAEtB,QAAC,IAAI;YAAC,SAAS,EAAC,MAAM;YAAA,UAAC;UAAG;YAAA;YAAA;YAAA;UAAA;QAAO;UAAA;UAAA;UAAA;QAAA;MACxB;QAAA;QAAA;QAAA;MAAA,QACF;IAAA;MAAA;MAAA;MAAA;IAAA;EAEF;IAAA;IAAA;IAAA;EAAA,QACX;AAElB;AAAC,GAjDQd,UAAU;AAAA,KAAVA,UAAU;AAmDnB,eAAeA,UAAU;AAEzB,MAAMgB,eAAe,GAAGjB,MAAM,CAACkB,GAAI;AACnC;AACA;AACA,CAAC;;AAED;AACA,MAAMC,OAAO,GAAGnB,MAAM,CAACkB,GAAI;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AAAA,MATMC,OAAO;AAUb,MAAMC,cAAc,GAAGpB,MAAM,CAACkB,GAAI;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AAAA,MApBME,cAAc;AAqBpB,MAAMC,QAAQ,GAAGrB,MAAM,CAACsB,CAAE;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAAA,MATKD,QAAQ;AAWd,MAAME,YAAY,GAAGvB,MAAM,CAACkB,GAAI;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAAA,MAnCKK,YAAY;AAqClB,MAAMC,UAAU,GAAGxB,MAAM,CAACyB,MAAO;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AAAA,MAdMD,UAAU;AAehB,MAAME,IAAI,GAAG1B,MAAM,CAAC2B,IAAK;AACzB;AACA;AACA,CAAC;AAAA,MAHKD,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}