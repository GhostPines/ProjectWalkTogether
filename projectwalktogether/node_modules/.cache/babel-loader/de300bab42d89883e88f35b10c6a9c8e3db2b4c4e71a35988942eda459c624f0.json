{"ast":null,"code":"var _jsxFileName = \"/Users/minsungsmac/Library/CloudStorage/OneDrive-Personal/ForCode/ProjectWalkTogether/projectwalktogether/src/pages/MapPage/Map/map.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { useMap } from '../../../hooks/useMap';\nimport * as S from '../Map/map.style';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  kakao\n} = window;\n\n// 카카오 객체를 window 객체의 interface에 추가\n\nconst MapContainer = () => {\n  _s();\n  // 전역 DB 불러오기\n\n  // 지도가 표시괼 HTML 요소\n\n  // 현재 클릭한 PostingId를 저장하는 state\n\n  const {\n    makeMap,\n    makeMarkers,\n    map\n  } = useMap(mapContainer, setMarkerImage, markerImage, DB);\n\n  //* 아래 useEffect는 지도를 불러오는 함수\n  useEffect(() => {\n    const container = document.getElementById('showMap');\n    const options = {\n      center: new kakao.maps.LatLng(33.450701, 126.570667),\n      level: 3\n    };\n    const map = new kakao.maps.Map(container, options);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(S.Mapbox, {\n    id: \"showMap\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 12\n  }, this);\n};\n_s(MapContainer, \"jW1ZG7kXKobeVN1d1JE/v5j5O0U=\", false, function () {\n  return [useMap];\n});\n_c = MapContainer;\nexport default MapContainer;\nvar _c;\n$RefreshReg$(_c, \"MapContainer\");","map":{"version":3,"names":["React","useEffect","useMap","S","kakao","window","MapContainer","makeMap","makeMarkers","map","mapContainer","setMarkerImage","markerImage","DB","container","document","getElementById","options","center","maps","LatLng","level","Map"],"sources":["/Users/minsungsmac/Library/CloudStorage/OneDrive-Personal/ForCode/ProjectWalkTogether/projectwalktogether/src/pages/MapPage/Map/map.tsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react'\nimport * as ReactDOMServer from 'react-dom/server'\nimport { useParams } from 'react-router-dom'\n\nimport { useRecoilState, useRecoilValue } from 'recoil'\nimport { useMap } from '../../../hooks/useMap'\n\nimport styled from 'styled-components'\nimport * as S from '../Map/map.style'\n\nconst { kakao } = window\n\n// 카카오 객체를 window 객체의 interface에 추가\ndeclare global {\n    interface Window {\n        kakao: any\n    }\n}\n\nconst MapContainer = () => {\n    // 전역 DB 불러오기\n\n    // 지도가 표시괼 HTML 요소\n\n    // 현재 클릭한 PostingId를 저장하는 state\n\n    const { makeMap, makeMarkers, map } = useMap(\n        mapContainer,\n        setMarkerImage,\n        markerImage,\n        DB\n    )\n\n    //* 아래 useEffect는 지도를 불러오는 함수\n    useEffect(() => {\n        const container = document.getElementById('showMap')\n        const options = {\n            center: new kakao.maps.LatLng(33.450701, 126.570667),\n            level: 3,\n        }\n        const map = new kakao.maps.Map(container, options)\n    }, [])\n\n    return <S.Mapbox id=\"showMap\"></S.Mapbox>\n}\n\nexport default MapContainer\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAA0B,OAAO;AAK1D,SAASC,MAAM,QAAQ,uBAAuB;AAG9C,OAAO,KAAKC,CAAC,MAAM,kBAAkB;AAAA;AAErC,MAAM;EAAEC;AAAM,CAAC,GAAGC,MAAM;;AAExB;;AAOA,MAAMC,YAAY,GAAG,MAAM;EAAA;EACvB;;EAEA;;EAEA;;EAEA,MAAM;IAAEC,OAAO;IAAEC,WAAW;IAAEC;EAAI,CAAC,GAAGP,MAAM,CACxCQ,YAAY,EACZC,cAAc,EACdC,WAAW,EACXC,EAAE,CACL;;EAED;EACAZ,SAAS,CAAC,MAAM;IACZ,MAAMa,SAAS,GAAGC,QAAQ,CAACC,cAAc,CAAC,SAAS,CAAC;IACpD,MAAMC,OAAO,GAAG;MACZC,MAAM,EAAE,IAAId,KAAK,CAACe,IAAI,CAACC,MAAM,CAAC,SAAS,EAAE,UAAU,CAAC;MACpDC,KAAK,EAAE;IACX,CAAC;IACD,MAAMZ,GAAG,GAAG,IAAIL,KAAK,CAACe,IAAI,CAACG,GAAG,CAACR,SAAS,EAAEG,OAAO,CAAC;EACtD,CAAC,EAAE,EAAE,CAAC;EAEN,oBAAO,QAAC,CAAC,CAAC,MAAM;IAAC,EAAE,EAAC;EAAS;IAAA;IAAA;IAAA;EAAA,QAAY;AAC7C,CAAC;AAAA,GAzBKX,YAAY;EAAA,QAOwBJ,MAAM;AAAA;AAAA,KAP1CI,YAAY;AA2BlB,eAAeA,YAAY;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}