{"ast":null,"code":"var _jsxFileName = \"/Users/minsungsmac/Library/CloudStorage/OneDrive-Personal/ForCode/ProjectWalkTogether/projectwalktogether/src/pages/MapPage/MapPage.tsx\";\nimport React from 'react';\nimport * as S from './MapPage.style';\nimport InfoList from './InfoList/InfoList';\nimport MapContainer from './Map/map';\nimport { currentLocationState } from '../../store/selector';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// GeoLocation으로 Kakao API 에 현재 위치를 표시하는 함수\nconst CurrentLocation = () => {\n  if (navigator.geolocation) {\n    navigator.geolocation.getCurrentPosition(function (position) {\n      const lat = position.coords.latitude,\n        // 위도\n        lon = position.coords.longitude; // 경도\n      const locPosition = new window.kakao.maps.LatLng(lat, lon),\n        // 마커가 표시될 위치를 geolocation으로 얻어온 좌표로 생성합니다\n        message = '<div style=\"padding:5px;\">현재 위치</div>'; // 인포윈도우에 표시될 내용입니다\n\n      // 마커와 인포윈도우를 표시합니다\n      displayMarker(locPosition, message);\n    });\n  } else {\n    const locPosition = new window.kakao.maps.LatLng(33.450701, 126.570667),\n      message = 'geolocation을 사용할수 없어 기본 위치로 이동합니다.';\n    currentLocationState['lat'] = 33.450701;\n    currentLocationState['lon'] = 126.570667;\n    displayMarker(locPosition, message);\n  }\n  return true;\n};\n_c = CurrentLocation;\nconst MapPage = () => {\n  return /*#__PURE__*/_jsxDEV(S.MapPageContainer, {\n    children: [/*#__PURE__*/_jsxDEV(S.MapPageHeader, {\n      children: [/*#__PURE__*/_jsxDEV(S.EmptyBox, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(S.MapPageTitle, {\n        children: \"\\uAC19\\uC774 \\uAC77\\uACE0 \\uC2F6\\uC740 \\uC0AC\\uB78C\\uB4E4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(S.LineMarker, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(S.MapPageContentsWrapper, {\n      children: [/*#__PURE__*/_jsxDEV(S.MapKaKaoMapContainer, {\n        children: /*#__PURE__*/_jsxDEV(MapContainer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(S.UserInfoContainer, {\n        children: /*#__PURE__*/_jsxDEV(InfoList, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n_c2 = MapPage;\nexport default MapPage;\nvar _c, _c2;\n$RefreshReg$(_c, \"CurrentLocation\");\n$RefreshReg$(_c2, \"MapPage\");","map":{"version":3,"names":["React","S","InfoList","MapContainer","currentLocationState","CurrentLocation","navigator","geolocation","getCurrentPosition","position","lat","coords","latitude","lon","longitude","locPosition","window","kakao","maps","LatLng","message","displayMarker","MapPage"],"sources":["/Users/minsungsmac/Library/CloudStorage/OneDrive-Personal/ForCode/ProjectWalkTogether/projectwalktogether/src/pages/MapPage/MapPage.tsx"],"sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nimport * as S from './MapPage.style'\nimport InfoList from './InfoList/InfoList'\nimport MapContainer from './Map/map'\nimport { currentLocationState } from '../../store/selector'\n\ndeclare global {\n    interface Window {\n        kakao: any\n    }\n}\n\n// GeoLocation으로 Kakao API 에 현재 위치를 표시하는 함수\nconst CurrentLocation = () => {\n    if (navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition(function (position) {\n            const lat = position.coords.latitude, // 위도\n                lon = position.coords.longitude // 경도\n            const locPosition = new window.kakao.maps.LatLng(lat, lon), // 마커가 표시될 위치를 geolocation으로 얻어온 좌표로 생성합니다\n                message = '<div style=\"padding:5px;\">현재 위치</div>' // 인포윈도우에 표시될 내용입니다\n\n            // 마커와 인포윈도우를 표시합니다\n            displayMarker(locPosition, message)\n        })\n    } else {\n        const locPosition = new window.kakao.maps.LatLng(33.450701, 126.570667),\n            message = 'geolocation을 사용할수 없어 기본 위치로 이동합니다.'\n\n        currentLocationState['lat'] = 33.450701\n        currentLocationState['lon'] = 126.570667\n\n        displayMarker(locPosition, message)\n    }\n    return true\n}\n\nconst MapPage = () => {\n    return (\n        <S.MapPageContainer>\n            <S.MapPageHeader>\n                <S.EmptyBox></S.EmptyBox>\n                <S.MapPageTitle>같이 걷고 싶은 사람들</S.MapPageTitle>\n                <S.LineMarker></S.LineMarker>\n            </S.MapPageHeader>\n            <S.MapPageContentsWrapper>\n                <S.MapKaKaoMapContainer>\n                    <MapContainer />\n                </S.MapKaKaoMapContainer>\n                <S.UserInfoContainer>\n                    <InfoList />\n                </S.UserInfoContainer>\n            </S.MapPageContentsWrapper>\n        </S.MapPageContainer>\n    )\n}\n\nexport default MapPage\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAO,KAAKC,CAAC,MAAM,iBAAiB;AACpC,OAAOC,QAAQ,MAAM,qBAAqB;AAC1C,OAAOC,YAAY,MAAM,WAAW;AACpC,SAASC,oBAAoB,QAAQ,sBAAsB;AAAA;AAQ3D;AACA,MAAMC,eAAe,GAAG,MAAM;EAC1B,IAAIC,SAAS,CAACC,WAAW,EAAE;IACvBD,SAAS,CAACC,WAAW,CAACC,kBAAkB,CAAC,UAAUC,QAAQ,EAAE;MACzD,MAAMC,GAAG,GAAGD,QAAQ,CAACE,MAAM,CAACC,QAAQ;QAAE;QAClCC,GAAG,GAAGJ,QAAQ,CAACE,MAAM,CAACG,SAAS,EAAC;MACpC,MAAMC,WAAW,GAAG,IAAIC,MAAM,CAACC,KAAK,CAACC,IAAI,CAACC,MAAM,CAACT,GAAG,EAAEG,GAAG,CAAC;QAAE;QACxDO,OAAO,GAAG,uCAAuC,EAAC;;MAEtD;MACAC,aAAa,CAACN,WAAW,EAAEK,OAAO,CAAC;IACvC,CAAC,CAAC;EACN,CAAC,MAAM;IACH,MAAML,WAAW,GAAG,IAAIC,MAAM,CAACC,KAAK,CAACC,IAAI,CAACC,MAAM,CAAC,SAAS,EAAE,UAAU,CAAC;MACnEC,OAAO,GAAG,oCAAoC;IAElDhB,oBAAoB,CAAC,KAAK,CAAC,GAAG,SAAS;IACvCA,oBAAoB,CAAC,KAAK,CAAC,GAAG,UAAU;IAExCiB,aAAa,CAACN,WAAW,EAAEK,OAAO,CAAC;EACvC;EACA,OAAO,IAAI;AACf,CAAC;AAAA,KArBKf,eAAe;AAuBrB,MAAMiB,OAAO,GAAG,MAAM;EAClB,oBACI,QAAC,CAAC,CAAC,gBAAgB;IAAA,wBACf,QAAC,CAAC,CAAC,aAAa;MAAA,wBACZ,QAAC,CAAC,CAAC,QAAQ;QAAA;QAAA;QAAA;MAAA,QAAc,eACzB,QAAC,CAAC,CAAC,YAAY;QAAA,UAAC;MAAY;QAAA;QAAA;QAAA;MAAA,QAAiB,eAC7C,QAAC,CAAC,CAAC,UAAU;QAAA;QAAA;QAAA;MAAA,QAAgB;IAAA;MAAA;MAAA;MAAA;IAAA,QACf,eAClB,QAAC,CAAC,CAAC,sBAAsB;MAAA,wBACrB,QAAC,CAAC,CAAC,oBAAoB;QAAA,uBACnB,QAAC,YAAY;UAAA;UAAA;UAAA;QAAA;MAAG;QAAA;QAAA;QAAA;MAAA,QACK,eACzB,QAAC,CAAC,CAAC,iBAAiB;QAAA,uBAChB,QAAC,QAAQ;UAAA;UAAA;UAAA;QAAA;MAAG;QAAA;QAAA;QAAA;MAAA,QACM;IAAA;MAAA;MAAA;MAAA;IAAA,QACC;EAAA;IAAA;IAAA;IAAA;EAAA,QACV;AAE7B,CAAC;AAAA,MAlBKA,OAAO;AAoBb,eAAeA,OAAO;AAAA;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}